package com.enviro.assessment.grad001.kganyamaleka.entities;


import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.Data;
import org.hibernate.annotations.CreationTimestamp;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity

// The @Data annotation from Lombok automatically generates boilerplate code such as
// getters, setters, equals, hashCode, and toString methods for this class. This significantly
// reduces development time and improves code readability by eliminating repetitive code.
@Data
public class WasteCategory {

    @CreationTimestamp
    private LocalDateTime created;


    @NotBlank(message = "name can not be blank")
    @Size(max = 60, message = "Name must not exceed 60 characters")
    private String name;

    @Size(max = 100, message = "Description must not exceed 100 characters")
    private String description;

    @OneToMany(mappedBy = "category", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<RecyclingTip> recyclingTips = new ArrayList<>();

    /**
     * The unique identifier for the waste category.
     * It is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Sets the list of recycling tips associated with this waste category.
     * Ensures bidirectional consistency by setting the category reference
     * in each recycling tip.
     *
     * @param recyclingTips the list of recycling tips to associate with this category.
     *                      Can be null, in which case no tips are associated.
     */
    public void setRecyclingTips(List<RecyclingTip> recyclingTips) {
        this.recyclingTips = recyclingTips;
        // Ensure bidirectional relationship consistency
        if (recyclingTips != null) {
            for (RecyclingTip tip : recyclingTips) {
                tip.setCategory(this); // Set the category reference for each tip
            }
        }
    }

}
